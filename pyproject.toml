[tool.poetry]
name = "src"
version = "0.1.0"
description = "Case Machine Learning Engineer"
authors = ["Ernane Sena <ernane.sena@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.*"
fastapi = {extras = ["standard"], version = "^0.115.0"}
uvicorn = "^0.31.0"
httpx = "^0.27.2"
mongomock = "^4.2.0.post1"
setuptools = "^75.1.0"
scikit-learn = "^1.5.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.6.8"
commitizen = "^3.29.1"
pytest-asyncio = "^0.24.0"
moto = {extras = ["all"], version = "^5.0.16"}

[tool.commitizen]
name = "cz_conventional_commits"

[tool.ruff]
line-length = 79
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
exclude = ["*.ipynb"]

[tool.ruff.format]
preview = true
quote-style = 'single'
exclude = ["*.ipynb"]

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="function"

[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff'
format = 'ruff check . --fix; ruff format .'
pre_test = 'task lint'
test = 'pytest -s -x --cov=src -vv'
post_test = 'coverage html'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
